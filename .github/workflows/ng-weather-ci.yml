name: ng-weather-ci
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v2

      - name: 💾 Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: ⎔ Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: 📀 Install dependencies
        run: npm install

      - name: 🧹 Lint
        run: npm run lint

      - name: 😍 Prettier check
        run: npm run check

      - name: 🧪 Test
        run: npm run test:ci

      - name: 👷‍♀️ Build
        run: npm run build -- --prod

      - name: ⏫ Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

  deploy:
    name: 'Deploy'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: ⏬ Download artifacts from build job
        uses: actions/download-artifact@v2
        with:
          name: dist
      - uses: actions/checkout@v1
      - uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.DEV_NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=build --prod
          secrets: '["DEV_NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'

  codecov:
    name: 'Upload coverage report'
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@master
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
